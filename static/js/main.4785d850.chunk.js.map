{"version":3,"sources":["utils/API.js","components/StreamerCard.js","components/Cards.js","App.js","reportWebVitals.js","index.js"],"names":["API","getStreams","token","a","fetch","method","headers","process","req","json","resp","console","log","getNextPage","currentPage","StreamerCard","title","streamer","thumb","thumbnail","toString","replace","className","target","rel","href","src","alt","data-text","Cards","legacyStreams","id","length","map","stream","user_name","thumbnail_url","style","textAlign","App","URL","useState","setLegacyStreams","setCurrentPage","JSON","parse","localStorage","getItem","closed","setClosed","filter","setFilter","access_token","setToken","useEffect","window","location","split","cherryPickStreams","streams","filtered","toLowerCase","includes","newStreams","Set","prevState","data","pagination","cursor","onscroll","innerHeight","scrollY","document","body","offsetHeight","nextPage","hideMessage","setItem","onClick","stringify","display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4785d850.chunk.js","sourcesContent":["export const API = {\r\n    getStreams: async function(token) {\r\n        try {\r\n            // mtg game id: 2748\r\n            const req = await fetch('https://api.twitch.tv/helix/streams?game_id=2748&first=100', {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    \"client-id\": process.env.REACT_APP_CLIENT_ID,\r\n                }\r\n            })\r\n            const resp = await req.json()\r\n            return resp\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    },\r\n    getNextPage: async function(token, currentPage) {\r\n        try {\r\n            const req = await fetch(`https://api.twitch.tv/helix/streams?game_id=2748&after=${currentPage}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${token}`,\r\n                    \"client-id\": process.env.REACT_APP_CLIENT_ID,\r\n                }\r\n            })\r\n            const resp = await req.json()\r\n            return resp\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import React from 'react'\r\n\r\nconst StreamerCard = ({ title, streamer, thumbnail }) => {\r\n    let thumb = thumbnail.toString().replace('{width}', '500').replace('{height}', '250')\r\n    return (\r\n        <div className='card'>\r\n            <div className=\"card-header\">\r\n                <h1>{streamer}</h1>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h2>{title}</h2>\r\n                <div className=\"img-link-container\">\r\n                    <a target='_blank' rel='noreferrer' href={`https://twitch.tv/${streamer}`}>\r\n                        <img src={thumb} alt={`${streamer}'s stream thumbnail`} />\r\n                        <span className=\"tooltip\" data-text={`click to open ${streamer}'s stream`}>\r\n                        </span>\r\n                    </a>\r\n                    <div className=\"spacer\"></div>\r\n                    <a className='link-button' rel='noreferrer' target='_blank' href={`https://twitch.tv/${streamer}`}>\r\n                        Go to {streamer}'s stream!\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StreamerCard\r\n","import React from 'react'\r\nimport StreamerCard from './StreamerCard'\r\n\r\nconst Cards = ({legacyStreams, token}) => {\r\n    return (\r\n        <div id='resp'>\r\n            {   legacyStreams?.length ?(\r\n                legacyStreams?.map(stream => {\r\n                    return <StreamerCard\r\n                        key={stream.id}\r\n                        title={stream.title}\r\n                        streamer={stream.user_name}\r\n                        thumbnail={stream.thumbnail_url}\r\n                    />\r\n\r\n                })\r\n                ) : (\r\n                    <p style={{textAlign: 'center'}}>{token ? `No live streamers at the moment. Try again later, or switch to a different format` : `Please login to view live streamers`}</p>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import { useState, useEffect } from 'react'\nimport { API } from './utils/API'\n\nimport Cards from './components/Cards'\n\nfunction App() {\n  const responseType = 'token'\n  const redirectURI = process.env.NODE_ENV !== 'production' ? 'http://localhost:3000' : 'https://cobypear.github.io/twitch-mtg-legacy-finder' // replace with production URI\n  const scopes = 'openid'\n  // console.log(process.env.REACT_APP_CLIENT_ID)\n  const claims = ''\n\n  const URL = `https://id.twitch.tv/oauth2/authorize?client_id=${process.env.REACT_APP_CLIENT_ID}&redirect_uri=${redirectURI}&response_type=${responseType}&scope=${scopes}&claims=${claims}&force_verify=true`\n\n  const [legacyStreams, setLegacyStreams] = useState([])\n  const [currentPage, setCurrentPage] = useState()\n  const [closed, setClosed] = useState(JSON.parse(localStorage.getItem('closed')) || false);\n  const [filter, setFilter] = useState(JSON.parse(localStorage.getItem('format')) || 'legacy')\n  const [access_token, setToken] = useState('')\n\n  useEffect(() => {\n    setToken(window.location.href.split('=')[1]?.split('&')[0])\n  }, [access_token])\n\n  useEffect(() => {\n    if (access_token) {\n      const cherryPickStreams = streams => {\n        let filtered = streams?.filter(stream => stream.title.toLowerCase().includes(filter))\n        // console.log(...filtered)\n        let newStreams = [...new Set(filtered)]\n        // console.log(newStreams)\n        setLegacyStreams(prevState => {\n          // console.log(prevState)\n          return [...newStreams]\n        })\n      }\n      (async () => {\n        const { data, pagination } = await API.getStreams(access_token)\n        setCurrentPage(pagination?.cursor)\n        cherryPickStreams(data)\n      })()\n    }\n  }, [access_token, filter])\n\n\n  useEffect(() => {\n    window.onscroll = function () {\n      if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n        nextPage()\n      }\n    }\n  })\n\n\n  // pick out streams based on filter. default legacy\n  const cherryPickStreams = streams => {\n    let filtered = streams?.filter(stream => stream.title.toLowerCase().includes(filter))\n    // console.log(...filtered)\n    let newStreams = [...new Set(filtered)]\n    // console.log(newStreams)\n    setLegacyStreams(prevState => {\n      return prevState ? [...prevState, ...newStreams] : [...newStreams]\n    })\n  }\n\n\n  // call the API again, ask for the next page\n  const nextPage = async () => {\n    if (currentPage) {\n      const { data, pagination } = await API.getNextPage(access_token, currentPage)\n      setCurrentPage(pagination.cursor ? pagination.cursor : '')\n      cherryPickStreams(data)\n    }\n  }\n\n  const hideMessage = () => {\n    setClosed(!closed)\n    localStorage.setItem('closed', !closed)\n  }\n\n\n  return (\n    <div className='main-container' href='#'>\n      <div className=\"row\">\n        <button\n          id='filter-btn'\n          onClick={() => {\n            setFilter(filter === 'legacy' ? 'modern' : 'legacy')\n            localStorage.setItem('format', JSON.stringify(filter === 'legacy' ? 'modern' : 'legacy'))\n          }}>\n          switch to {`${filter === 'legacy' ? 'modern' : 'legacy'}`}\n        </button>\n        <a className='link-button' id='login' href={URL}>Login</a>\n        {closed && <button id='show-message' onClick={hideMessage}>show message</button>}\n      </div>\n      {\n        !closed && (\n          <div className=\"row\">\n            <div className=\"message\" style={{ display: closed ? 'none' : 'inline-block' }}>\n              <h1>Welcome to Twitch M:tG Legacy Finder</h1>\n              <button onClick={hideMessage}>x</button>\n              <p>How does it work?</p>\n              <p>1. Click Login to login to your Twitch account <a href=\"https://github.com/CobyPear/twitch-mtg-legacy-finder#question-why-do-i-need-to-login-to-twitch\" id='why'>Why do I need to do this?</a></p>\n              <p>2. Browse live Magic: the Gathering streamers currently playing the best (Legacy) format</p>\n              <a className='link-button' href={URL}>Login</a>\n            </div>\n          </div>\n        )\n      }\n      <div id='cards'>\n        {legacyStreams && <Cards legacyStreams={legacyStreams} token={access_token} />}\n      </div>\n      <button\n        id='to-top'\n        // onClick={() => window.location = '#'}\n        >\n          <a href=\"#\">\n            ^\n          </a>\n        \n          </button>\n\n      <footer id='footer'>\n        <span>&copy; <a href=\"https://cobysher.dev\">Coby Sher</a> 2021</span>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}